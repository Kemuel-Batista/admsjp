/// <reference types="multer" />
import { Decimal } from '@prisma/client/runtime/library';
import { z } from 'zod';
import { CreateEventUseCase } from '@/domain/admsjp/use-cases/events/create-event';
import { UserPayload } from '@/infra/auth/jwt.strategy';
declare const createEventSchema: z.ZodObject<{
    title: z.ZodString;
    description: z.ZodString;
    initialDate: z.ZodEffects<z.ZodString, Date, string>;
    finalDate: z.ZodEffects<z.ZodString, Date, string>;
    status: z.ZodOptional<z.ZodNumber>;
    visible: z.ZodOptional<z.ZodNumber>;
    eventType: z.ZodNumber;
    departmentId: z.ZodNumber;
    message: z.ZodOptional<z.ZodString>;
    lots: z.ZodEffects<z.ZodEffects<z.ZodString, string, string>, any, string>;
    street: z.ZodOptional<z.ZodString>;
    neighborhood: z.ZodOptional<z.ZodString>;
    number: z.ZodOptional<z.ZodString>;
    complement: z.ZodOptional<z.ZodString>;
    state: z.ZodOptional<z.ZodNumber>;
    city: z.ZodOptional<z.ZodNumber>;
    latitude: z.ZodOptional<z.ZodEffects<z.ZodEffects<z.ZodNumber, number, number>, Decimal, number>>;
    longitude: z.ZodOptional<z.ZodEffects<z.ZodEffects<z.ZodNumber, number, number>, Decimal, number>>;
    pixKey: z.ZodString;
    pixType: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    title?: string;
    description?: string;
    initialDate?: Date;
    finalDate?: Date;
    status?: number;
    visible?: number;
    eventType?: number;
    departmentId?: number;
    message?: string;
    lots?: any;
    street?: string;
    neighborhood?: string;
    number?: string;
    complement?: string;
    state?: number;
    city?: number;
    latitude?: Decimal;
    longitude?: Decimal;
    pixKey?: string;
    pixType?: number;
}, {
    title?: string;
    description?: string;
    initialDate?: string;
    finalDate?: string;
    status?: number;
    visible?: number;
    eventType?: number;
    departmentId?: number;
    message?: string;
    lots?: string;
    street?: string;
    neighborhood?: string;
    number?: string;
    complement?: string;
    state?: number;
    city?: number;
    latitude?: number;
    longitude?: number;
    pixKey?: string;
    pixType?: number;
}>;
type CreateEventSchema = z.infer<typeof createEventSchema>;
export declare class CreateEventController {
    private createEvent;
    constructor(createEvent: CreateEventUseCase);
    handle(file: Express.Multer.File, body: CreateEventSchema, user: UserPayload): Promise<{
        id: number;
        uuid: string;
        title: string;
        slug: string;
        description: string;
        initialDate: Date;
        finalDate: Date;
        status: number;
        visible: number;
        departmentId: number;
        eventType: number;
        imagePath: string;
        pixKey: string;
        pixType: number;
        message: string;
        createdAt: Date;
        createdBy: number;
        updatedAt: Date;
        updatedBy: number;
        deletedAt: Date;
        deletedBy: number;
    }>;
}
export {};
